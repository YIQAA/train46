<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qdu.mapper.OrdersMapper">
    <!-- 更新订单状态 (带状态校验) -->
    <update id="updateOrderStatusToCanceled">
        UPDATE orders
        SET status = 2
        WHERE order_number = #{orderSn}
        AND status = 0 <!-- 仅允许取消待支付订单 -->
    </update>

    <!-- 批量解锁座位 -->
    <update id="unlockSeatsByOrderSn">
        UPDATE seat s
        INNER JOIN order_passengers op ON s.seat_id = op.seat_id
        INNER JOIN orders o ON op.order_id = o.order_id
        SET s.status = 'available'
        WHERE o.order_number = #{orderSn}
        AND s.status = 'locked' <!-- 仅处理锁定座位 -->
    </update>


<!--    支付-->
    <!-- OrderMapper.xml -->
    <update id="updateOrderStatusToPaid">
        UPDATE orders
        SET status = 1
        WHERE order_number = #{orderSn}
        AND status = 0 <!-- 仅允许支付待支付订单 -->
    </update>

    <!-- SeatMapper.xml -->
    <update id="occupySeatsByOrderSn">
        UPDATE seat s
        INNER JOIN order_passengers op ON s.seat_id = op.seat_id
        INNER JOIN orders o ON op.order_id = o.order_id
        SET s.status = 'occupied'
        WHERE o.order_number = #{orderSn}
        AND s.status = 'locked' <!-- 仅处理锁定座位 -->
    </update>




    <select id="findOrderIdByOrderSn" resultType="java.lang.Integer">
        select order_id from orders where order_number = #{orderSn}
    </select>
    <select id="selectOrderSnByUserId" resultType="java.lang.String">
        select order_number from orders where user_id = #{userId} ORDER BY created_at DESC
    </select>
    <select id="getOrderStatusByOrderSn" resultType="java.lang.Integer">
        select status from orders where order_number = #{orderSn}
    </select>
    <select id="selectAllOrderSn" resultType="java.lang.String">
        select order_number from orders
    </select>
    <select id="getOrderCountByUserId" resultType="java.lang.Integer">
        select count(*) from orders where user_id = #{userId}
    </select>
    <select id="getTodayOrderCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM orders
        WHERE created_at >= CURDATE()
        AND  DATE_ADD(CURDATE(), INTERVAL 1 DAY) >created_at
    </select>
    <select id="getTodayPassengerCount" resultType="java.lang.Integer">
        SELECT COUNT(op.passenger_id)
        FROM daily_train dt
                 INNER JOIN orders o ON dt.train_id = o.train_id
                 INNER JOIN order_passengers op ON o.order_id = op.order_id
        WHERE dt.departure_date = CURDATE()
    </select>
    <select id="getPassengerTrend" resultType="com.qdu.dto.resp.admin.PassengerTrendDTO">
        SELECT
            DATE_FORMAT(dt.departure_date, '%Y-%m-%d') AS date,
            COUNT(op.passenger_id) AS count
        FROM daily_train dt
            LEFT JOIN orders o ON dt.train_id = o.train_id
            LEFT JOIN order_passengers op ON o.order_id = op.order_id
        WHERE dt.departure_date BETWEEN
            CURDATE() - INTERVAL #{days} DAY AND CURDATE()
        GROUP BY dt.departure_date
        ORDER BY dt.departure_date ASC
    </select>
    <select id="getOrderTrend" resultType="com.qdu.dto.resp.admin.OrderTrendDTO">
        SELECT
        DATE_FORMAT(created_at, '%Y-%m-%d') AS date,
        COUNT(order_id) AS count
        FROM orders
        WHERE created_at >= CURDATE() - INTERVAL #{days} DAY
        AND  CURDATE() + INTERVAL 1 DAY > created_at
        AND status != 2
        GROUP BY DATE(created_at)
        ORDER BY DATE(created_at) ASC
    </select>


</mapper>
